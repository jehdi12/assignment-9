
public class MergeSort {
public static void mergeSort(int[] arr) {
int n = arr.length;
int[] temp = new int[n];
mergeSort(arr, temp, 0, n - 1);
}

private static void mergeSort(int[] arr, int[] temp, int left, int right) {
if (left < right) {
int mid = (left + right) / 2;
mergeSort(arr, temp, left, mid);
mergeSort(arr, temp, mid + 1, right);
merge(arr, temp, left, mid, right);
}
}

private static void merge(int[] arr, int[] temp, int left, int mid, int right) {
for (int i = left; i <= right; i++) {
temp[i] = arr[i];
}

int i = left;
int j = mid + 1;
int k = left;

while (i <= mid && j <= right) {
if (temp[i] <= temp[j]) {
arr[k] = temp[i];
i++;
} else {
arr[k] = temp[j];
j++;
}

}

while (i <= mid) {
arr[k] = temp[i];
i++;
k++;
}
}

public static void main(String[] args) {
int[] arr = {5, 2, 8, 12, 3};
mergeSort(arr);
System.out.println("Sorted array: " + Arrays.toString(arr));
}
}
